{"ast":null,"code":"export default {\n  name: 'Users',\n  data() {\n    return {\n      queryInfo: {\n        //获取用户列表的请求参数\n        query: '',\n        pagenum: 1,\n        pagesize: 2\n      },\n      userList: [],\n      // 用户列表\n      total: 0 // 总人数\n    };\n  },\n\n  created() {\n    this.getUserList();\n  },\n  methods: {\n    async getUserList() {\n      // 请求用户列表\n      const {\n        data: res\n      } = await this.$http.get('users', {\n        params: this.queryInfo\n      });\n      this.total = res.data.total;\n      this.userList = res.data.users;\n      console.log(res);\n    },\n    // 监听 pagesize 的变化\n    handleSizeChange(newSize) {\n      // 将最新的newSize的值赋给pagesize，然后重新发起请求\n      this.queryInfo.pagesize = newSize;\n      this.getUserList();\n    },\n    // 监听页数的变化\n    handleCurrentChange(newPage) {\n      // 将最新的newPage的值赋给pagenum，然后重新发起请求\n      this.queryInfo.pagenum = newPage;\n      this.getUserList();\n    },\n    // 监听状态按钮最新的状态\n    async getnewStatus(userlist) {\n      // 当用户的状态发生改变时，发起请求用户的状态\n      console.log(userlist.id);\n      const {\n        data: res\n      } = await this.$http.put(`users/:uid=${userlist.id}/state/:type=${userlist.mg_state}`);\n      console.log(res);\n    }\n  }\n};","map":{"version":3,"mappings":"AA+DA;EACAA;EACAC;IACA;MACAC;QAAA;QACAC;QACAC;QACAC;MACA;MACAC;MAAA;MACAC;IACA;EACA;;EACAC;IACA;EACA;EACAC;IACA;MACA;MACA;QAAAR;MAAA;QAAAS;MAAA;MACA;MACA;MACAC;IACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACA;IACA;MACA;MACAF;MACA;QAAAV;MAAA;MACAU;IACA;EACA;AACA","names":["name","data","queryInfo","query","pagenum","pagesize","userList","total","created","methods","params","console","handleSizeChange","handleCurrentChange"],"sourceRoot":"src/views/rightSidebar","sources":["Users.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 用户导航区域 -->\r\n    <el-breadcrumb separator=\"/\">\r\n    <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n    <el-breadcrumb-item :to=\"{ path: '/users' }\">用户管理</el-breadcrumb-item>\r\n    <el-breadcrumb-item>用户列表</el-breadcrumb-item>\r\n</el-breadcrumb>\r\n<!-- 卡片区域 -->\r\n    <el-card>\r\n      <el-row :gutter=\"20\">\r\n          <el-col :span=\"8\">\r\n            <!-- 搜索框 -->\r\n            <el-input placeholder=\"请输入内容\">\r\n              <el-button slot=\"append\" icon=\"el-icon-search\"></el-button>\r\n          </el-input>\r\n        </el-col>\r\n          <el-col :span=\"6\"><el-button type=\"primary\">添加用户</el-button></el-col>\r\n      </el-row>\r\n      <!-- 用户列表 -->\r\n      <el-table :data=\"userList\" style=\"width: 100%\" stripe border>\r\n      <el-table-column type=index label=\"#\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"username\" label=\"姓名\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\r\n      <el-table-column prop=\"mobile\" label=\"电话\"></el-table-column>\r\n      <el-table-column prop=\"role_name\" label=\"角色\"></el-table-column>\r\n      <el-table-column label=\"状态\">\r\n        <!-- 状态按钮 -->\r\n        <template slot-scope=\"scope\">\r\n          <el-switch v-model=\"scope.row.mg_state\"\r\n          @change=\"getnewStatus(scope.row)\">\r\n        </el-switch>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"操作\">\r\n        <!-- 编辑按钮 -->\r\n        <el-button type=\"primary\" size=\"mini\" icon=\"el-icon-edit\"></el-button>\r\n        <!-- 删除按钮 -->\r\n        <el-button type=\"danger\" size=\"mini\" icon=\"el-icon-delete\"></el-button>\r\n        <!-- 文字提示 -->\r\n        <el-tooltip effect=\"dark\" content=\"分配角色\" placement=\"top\" :enterable=\"false\">\r\n          <!-- 分配角色 -->\r\n          <el-button type=\"warning\" size=\"mini\" icon=\"el-icon-setting\"></el-button>\r\n        </el-tooltip>\r\n      </el-table-column>\r\n    </el-table>\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n      @size-change=\"handleSizeChange\"\r\n      @current-change=\"handleCurrentChange\"\r\n      :current-page=\"queryInfo.pagenum\"\r\n      :page-sizes=\"[1, 2, 5, 10]\"\r\n      :page-size=\"queryInfo.pagesize\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n      :total=\"total\">\r\n    </el-pagination>\r\n  </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name:'Users',\r\n  data() {\r\n    return {\r\n      queryInfo:{   //获取用户列表的请求参数\r\n        query:'',\r\n        pagenum:1,\r\n        pagesize:2\r\n      },\r\n      userList: [], // 用户列表\r\n      total:0  // 总人数\r\n    };\r\n  },\r\n  created() {\r\n    this.getUserList();\r\n  },\r\n  methods: {\r\n   async getUserList() {\r\n      // 请求用户列表\r\n    const {data:res} =  await this.$http.get('users',{params:this.queryInfo});\r\n    this.total = res.data.total;\r\n    this.userList = res.data.users;\r\n    console.log(res);\r\n    },\r\n    // 监听 pagesize 的变化\r\n  handleSizeChange(newSize){\r\n    // 将最新的newSize的值赋给pagesize，然后重新发起请求\r\n    this.queryInfo.pagesize = newSize;\r\n    this.getUserList();\r\n  },\r\n  // 监听页数的变化\r\n  handleCurrentChange(newPage){\r\n     // 将最新的newPage的值赋给pagenum，然后重新发起请求\r\n     this.queryInfo.pagenum = newPage;\r\n     this.getUserList();\r\n  },\r\n  // 监听状态按钮最新的状态\r\n async getnewStatus(userlist){\r\n    // 当用户的状态发生改变时，发起请求用户的状态\r\n    console.log(userlist.id);\r\n const {data:res} = await this.$http.put(`users/:uid=${userlist.id}/state/:type=${userlist.mg_state}`)\r\n      console.log(res);\r\n     }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}