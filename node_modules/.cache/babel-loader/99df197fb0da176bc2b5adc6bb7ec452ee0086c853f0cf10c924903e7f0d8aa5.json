{"ast":null,"code":"export default {\n  data() {\n    return {\n      loginForm: {\n        username: 'admin',\n        password: '123456'\n      },\n      // 表单验证规则\n      loginFormRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名称',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '用户名的长度在 3 到 10 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入登录密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 15,\n          message: '密码的长度在 6 到 15 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    reset() {\n      this.$refs.formReset.resetFields();\n    },\n    login() {\n      this.$refs.formReset.validate(async res => {\n        if (!res) {\n          return;\n        } // 当用户名和密码的输入的格式有误就不发起请求\n        // 发起请求\n        const {\n          data: result\n        } = await this.$http.post('login', this.loginForm);\n        // status为200说明用户名存在\n        if (result.meta.status === 200) {\n          this.$message.success('登录成功');\n        } else {\n          this.$message.error('登录失败');\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AA4BA;EACAA;IACA;MACAC;QACAC;QACAC;MACA;MACA;MACAC;QACAF,WACA;UAAAG;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA,EACA;QACAJ,WACA;UAAAE;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAC;UAAAH;UAAAC;QAAA;MAEA;IACA;EACA;EACAG;IACAC;MACA;IACA;IACAC;MACA;QACA;UAAA;QAAA;QACA;QACA;UAAAZ;QAAA;QACA;QACA;UACA;QACA;UACA;QACA;MACA;IACA;EACA;AACA","names":["data","loginForm","username","password","loginFormRules","required","message","trigger","min","max","methods","reset","login"],"sourceRoot":"src/views","sources":["Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login_box\">\r\n      <!-- 图像区域 -->\r\n      <div class=\"img_box\">\r\n        <img src=\"../assets/logo.png\"/>\r\n      </div>\r\n      <!-- 登录表单区域 -->\r\n      <el-form ref=\"formReset\" :rules=\"loginFormRules\" :model=\"loginForm\" label-width=\"0px\" class=\"login_form\">\r\n        <!-- 用户名 -->\r\n        <el-form-item prop=\"username\"> \r\n          <el-input v-model=\"loginForm.username\" prefix-icon=\"el-icon-user-solid\" class=\"login_form_input\"></el-input>\r\n        </el-form-item>\r\n        <!-- 密码 -->\r\n        <el-form-item prop=\"password\">\r\n          <el-input v-model=\"loginForm.password\" prefix-icon=\"el-icon-lock\" type=\"password\" class=\"login_form_input\"></el-input>\r\n        </el-form-item>\r\n        <!-- 按钮 -->\r\n        <el-form-item class=\"login_form_btn\" >\r\n          <el-button type=\"primary\" @click=\"login\">登录</el-button>\r\n          <el-button type=\"info\" @click=\"reset\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      loginForm:{\r\n        username:'admin',\r\n        password:'123456'\r\n      },\r\n      // 表单验证规则\r\n      loginFormRules:{\r\n        username: [\r\n            { required: true, message: '请输入用户名称', trigger: 'blur' },\r\n            { min: 3, max: 10, message: '用户名的长度在 3 到 10 个字符', trigger: 'blur' }\r\n          ],\r\n          password: [\r\n            { required: true, message: '请输入登录密码', trigger: 'blur' },\r\n            { min: 6, max: 15, message: '密码的长度在 6 到 15 个字符', trigger: 'blur' }\r\n          ],\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    reset() {\r\n      this.$refs.formReset.resetFields();\r\n    },\r\n    login(){\r\n      this.$refs.formReset.validate(async res=>{\r\n        if(!res){return} // 当用户名和密码的输入的格式有误就不发起请求\r\n        // 发起请求\r\n        const {data:result} = await this.$http.post('login',this.loginForm);\r\n        // status为200说明用户名存在\r\n        if(result.meta.status===200){\r\n          this.$message.success('登录成功')\r\n        }else{\r\n          this.$message.error('登录失败')\r\n        }\r\n      })\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.login-container {\r\n  background-color: #2b4b6b;\r\n  height: 100%;\r\n}\r\n.login_box {\r\n  width: 450px;\r\n  height: 400px;\r\n  background-color: rgba(0, 25, 25, 0.5);\r\n  border-radius: 20px;\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n.img_box {\r\n  width: 130px;\r\n  height: 130px;\r\n  border: 1px solid black;\r\n  border-radius: 50%;\r\n  padding: 5px;\r\n  position: absolute;\r\n  left: 50%;\r\n  top: -65px;\r\n  transform: translate(-50%);\r\n  background-color: rgb(210, 220, 14);\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    border: 1px solid white;\r\n    border-radius: 50%;\r\n    margin-top: -2.3px;\r\n    background-color: white;\r\n  }\r\n}\r\n.login_form{\r\n  width: 90%;\r\n  position: absolute;\r\n  top: 25%;\r\n  left: 5%;\r\n  .login_form_input{\r\n    margin-top: 15px;\r\n  }\r\n  .login_form_btn{\r\n    position: relative;\r\n    display: flex;\r\n    justify-content:space-between;\r\n    top: 30px;\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}